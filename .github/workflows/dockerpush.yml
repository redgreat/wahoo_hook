name: docker push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - 'v*'

env:
  DOCKER_IMAGE_NAME: redgreat/wahoo_webhook
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Free disk space
        run: |
          # Free disk space.
          echo "::group::Before"
          df -h /
          echo "::endgroup::"
          echo "::group::Removing unneeded softwares and files..."
          for DIR in /usr/local/lib/android /usr/share/dotnet /opt/ghc
          do
            if [ -d "$DIR" ]; then
                echo "Removing $DIR..."
                sudo rm -r "$DIR"
            fi
          done
          echo "::endgroup::"
          echo "::group::After"
          df -h /
          echo "::endgroup::"

      - name: Determine Docker container version
        id: prep
        run: |
          # Determine the Docker container version.
          VERSION=unknown
          if [[ $GITHUB_REF =~ refs/tags/* ]]; then
            # Git tag pushed: use tag as the version.
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF =~ refs/heads/* ]]; then
            # Git commit pushed: use the commit SHA as the version.
            VERSION=${GITHUB_SHA::8}
          elif [[ $GITHUB_REF =~ refs/pull/* ]]; then
            # Pull request: use PR number as the version.
            VERSION=pr-${{ github.event.number }}
          else
            echo "::error::Unexpected GITHUB_REF: $GITHUB_REF"
            exit 1
          fi
          # Determine the version to put in container label.
          LABEL_VERSION=${VERSION}
          if [[ $GITHUB_REF =~ refs/tags/* ]]; then
            # Do not include the starting 'v' of the version.
            LABEL_VERSION=${VERSION:1}
          fi
          # Determine the Docker container tags.
          TAGS="${{ github.repository_owner }}/${{ env.DOCKER_IMAGE_NAME}}:${LABEL_VERSION}"
          TAGS="$TAGS,ghcr.io/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE_NAME }}:${LABEL_VERSION}"
          if [[ $GITHUB_REF =~ refs/tags/* ]]; then
            TAGS="$TAGS,${{ github.repository_owner }}/${{ env.DOCKER_IMAGE_NAME }}:latest,ghcr.io/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE_NAME }}:latest"
          fi
          # Print results.
          echo "::group::Results"
          echo "Github reference: $GITHUB_REF"
          echo "Docker container version: $VERSION"
          echo "Docker container version label: $LABEL_VERSION"
          echo "Docker container tag(s): $TAGS"
          echo "::endgroup::"
          # Export outputs.
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "label_version=${LABEL_VERSION}" >> $GITHUB_OUTPUT
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm,arm64

      - name: docker build load
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: dockerhub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: github container registry login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: docker image build & push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ steps.prep.outputs.version != 'unknown' }}
          provenance: false
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
              DOCKER_IMAGE_VERSION=${{ steps.prep.outputs.label_version }}
          cache-from: type=gha,scope=${{ env.DOCKER_IMAGE_NAME }}
          cache-to: type=gha,mode=max,scope=${{ env.DOCKER_IMAGE_NAME }}

      - name: inspect
        if: ${{ steps.prep.outputs.version != 'unknown' }}
        run: |
          docker buildx imagetools inspect ${{ github.repository_owner }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.prep.outputs.label_version }}
          docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.prep.outputs.label_version }}

      - name: dockerhub description
        if: ${{ steps.prep.outputs.version != 'unknown' }}
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ github.repository_owner }}/${{ env.DOCKER_IMAGE_NAME }}
          readme-filepath: README.Docker.md
